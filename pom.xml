<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<parent>
		<groupId>org.springframework.boot</groupId>
		<artifactId>spring-boot-starter-parent</artifactId>
		<version>2.4.5</version>
		<relativePath/> <!-- lookup parent from repository -->
	</parent>
	<groupId>com.gemography.challenge</groupId>
	<artifactId>backend-coding-challenge</artifactId>
	<version>0.0.1-SNAPSHOT</version>
	<name>backend-coding-challenge</name>
	<description>Coding challenge for hiring gemography process about github trending </description>
	<properties>
		<java.version>15</java.version>
		<docker.repository></docker.repository>
	</properties>
	<dependencies>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-data-rest</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-web-services</artifactId>
		</dependency>
		
		<!-- METRIC -->
		<dependency>
	        <groupId>org.springframework.boot</groupId>
	        <artifactId>spring-boot-starter-actuator</artifactId>
	    </dependency>
		
		<!-- SWAGGER -->
		<dependency>
		    <groupId>org.springdoc</groupId>
		    <artifactId>springdoc-openapi-ui</artifactId>
		    <version>1.5.2</version>
		</dependency>

		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-test</artifactId>
			<scope>test</scope>
		</dependency>
	</dependencies>

	<profiles>
		<profile>
			<id>docker</id>
			<activation>
				<activeByDefault>false</activeByDefault>
				<property>
					<name>env</name>
					<value>docker</value>
				</property>
			</activation>
			<build>
				<plugins>
					<plugin>
						<groupId>com.spotify</groupId>
	            		<artifactId>dockerfile-maven-plugin</artifactId>
					</plugin>
				</plugins>
			</build>
		</profile>
	</profiles>
	<build>
		<plugins>
			<plugin>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-maven-plugin</artifactId>
				<executions>
			        <execution>
			            <goals>
			                <goal>build-info</goal>
			            </goals>
			        </execution>
			    </executions>
			</plugin>
			<plugin>
                <groupId>pl.project13.maven</groupId>
                <artifactId>git-commit-id-plugin</artifactId>
                <configuration>
                    <verbose>false</verbose>
                    <useNativeGit>true</useNativeGit>
                    <generateGitPropertiesFile>false</generateGitPropertiesFile>
                    <offline>true</offline>
                    <includeOnlyProperties>
                        <includeOnlyProperty>^git.build.(time|version)$</includeOnlyProperty>
                        <includeOnlyProperty>^git.commit.id.(abbrev|full)$</includeOnlyProperty>
                    </includeOnlyProperties>
                    <dateFormat>yyyy-MM-dd</dateFormat>
                </configuration>
            </plugin>
            
		</plugins>
		<pluginManagement>
			<plugins>
				<plugin>
		        	<groupId>com.spotify</groupId>
	            	<artifactId>dockerfile-maven-plugin</artifactId>
	            	<version>1.4.3</version>
	            	<!-- work arround --><!-- 
	            	https://github.com/spotify/docker-maven-plugin/issues/427 -->
	            	<dependencies>
	                   <dependency>
	                       <groupId>javax.activation</groupId>
	                       <artifactId>javax.activation-api</artifactId>
	                       <version>1.2.0</version>
	                       <scope>compile</scope>
	                   </dependency>
	               </dependencies>
	             	<executions>
	                	<execution>
	                    	<id>default</id>
	                     	<goals>
	                         	<goal>build</goal>
	                     	</goals>
	                	</execution>
	             	</executions>
	             	<configuration>
	             		<repository>${docker.repository}gemography/${project.artifactId}</repository>
	             		<buildArgs>
	             			<JAR_FILE>${project.build.finalName}.jar</JAR_FILE>
	             			<APP_NAME>${project.artifactId}</APP_NAME>
	             			<APP_VERSION>${project.version}</APP_VERSION>
	             		</buildArgs>
	             		<verbose>true</verbose>
	                 	<tag>${project.version}</tag>
	             	</configuration>
		         </plugin>
	         </plugins>
		</pluginManagement>
	</build>

</project>
